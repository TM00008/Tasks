coalescent.plot()
library(adegenet)
library(poppr)
library(dplyr)
library(hierfstat)
library(reshape2)
library(ggplot2)
library(RColorBrewer)
library(scales)
lobster <- read.csv("https://jonsmitchell.com/data/lobster_genotypes.csv")
lobster_wide <- reshape(lobster, idvar=c("ID", "Site"), timevar="Locus", direction="wide", sep="")
colnames(lobster_wide) <- gsub("Genotype", "", colnames(lobster_wide))
snpgeno <- lobster_wide[, 3:ncol(lobster_wide)]
snps_to_remove <- c("25580", "32362", "41521", "53889", "65376", "8953", "21197", "15531", "22740", "28357", "33066", "51507", "53052", "53263", "21880", "22323", "22365")
snpgeno <- snpgeno[, !colnames(snpgeno) %in% snps_to_remove]
ind <- as.character(lobster_wide$ID)
site <- as.character(lobster_wide$Site)
lobster_gen <- df2genind(snpgeno, ploidy=2, ind.names=ind, pop=site, sep="")
lobster_gen <- missingno(lobster_gen, type="geno", cutoff=0.20)
mlg(lobster_gen)
dups_lobster <- mlg.id(lobster_gen)
lob_dups <- c()
x <- 1
for (i in dups_lobster) {
if (length(dups_lobster[i])>1){
lob_dups[x] <- i
x <- x+1
}
}
lob_Nodups <- indNames(lobster_gen)[! indNames(lobster_gen) %in% lob_dups]
lobster_gen <- lobster_gen[lob_Nodups,]
summary(lobster_gen$pop)
basic_lobster <- basic.stats(lobster_gen,diploid=TRUE)
Ho_lobster<-round(apply(basic_lobster$Ho, MARGIN =2, FUN= mean, na.rm=TRUE), digits=3)
He_lobster <- round(apply(basic_lobster$Hs, MARGIN=2, FUN=mean, na.rm=TRUE), digits=3)
par(mar=c(4,4,1,1), las=1, mgp=c(2,0.25,0), tck=-0.005, cex.lab=1.25)
plot(He_lobster, Ho_lobster, xlab="expected H", ylab="observed H", pch=21, bg="gray", xlim=c(0.32,0.405), ylim=c(0.32,0.405))
abline(0,1,lty=3)
abline(lm(Ho_lobster~He_lobster), lty=2, lwd=1.25, col='red')
Fis<- apply(basic_lobster$Fis, MARGIN=2, FUN=mean, na.rm=TRUE)
lobster_gen_sub<- popsub(lobster_gen, sublist=c("Ale", "Ber", "Brd", "Pad", "Sar17", "Vig"))
lobster_fst<- genet.dist(lobster_gen_sub, method="WC84") %>%round(digits=3)
lab_order<- c("Ber", "Brd", "Pad", "Vig", "Sar17", "Ale")
fst.mat<- as.matrix(lobster_fst)
fst.mat1<-fst.mat[lab_order,]
fst.mat2 <- fst.mat1[,lab_order]
ind<-which(upper.tri(fst.mat2), arr.ind=TRUE)
fst.df<-data.frame(Site1=dimnames(fst.mat2)[[2]][ind[,2]],Site2=dimnames(fst.mat2)[[1]][ind[,1]], Fst=fst.mat2[ ind ])
fst.df$Site1 <- factor(fst.df$Site1,levels=unique(fst.df$Site1))
fst.df$Site2<- factor(fst.df$Site2,levels=unique(fst.df$Site2))
fst.df$Fst[fst.df$Fst<0] <- 0
fst.label <- expression(italic("F") [ST])
mid <- max(fst.df$Fst)/2
ggplot(data=fst.df,aes(x=Site1, y=Site2, fill=Fst))+geom_tile(colour="black")+geom_text(aes(label=Fst), color="black", size=3)+scale_fill_gradient2(low="blue", mid="pink", high="red", midpoint=mid, name=fst.label,limits=c(0,max(fst.df$Fst)), breaks=c(0,0.05,0.10,0.15))+scale_x_discrete(expand=c(0,0))+scale_y_discrete(expand=c(0,0), position="right")+theme(axis.text=element_text(colour="black", size=10, face="bold"), axis.title=element_blank(), panel.grid=element_blank(), panel.background=element_blank(), legend.position="right", legend.title=element_text(size=14, face="bold"), legend.text=element_text(size=10))
install.packages(c("adegenet", "poppr", "dplyr", "hierfstat", "reshape2", "ggplot2", "RColorBrewer", "scales"))
lobster <- read.csv("https://jonsmitchell.com/data/lobster_genotypes.csv")
lobster_wide <- reshape(lobster, idvar=c("ID", "Site"), timevar="Locus", direction="wide", sep="")
colnames(lobster_wide) <- gsub("Genotype", "", colnames(lobster_wide))
snpgeno <- lobster_wide[, 3:ncol(lobster_wide)]
snps_to_remove <- c("25580", "32362", "41521", "53889", "65376", "8953", "21197", "15531", "22740", "28357", "33066", "51507", "53052", "53263", "21880", "22323", "22365")
snpgeno <- snpgeno[, !colnames(snpgeno) %in% snps_to_remove]
ind <- as.character(lobster_wide$ID)
site <- as.character(lobster_wide$Site)
lobster_gen <- df2genind(snpgeno, ploidy=2, ind.names=ind, pop=site, sep="")
lobster_gen <- missingno(lobster_gen, type="geno", cutoff=0.20)
mlg(lobster_gen)
dups_lobster <- mlg.id(lobster_gen)
lob_dups <- c()
x <- 1
for (i in dups_lobster) {
if (length(dups_lobster[i])>1){
lob_dups[x] <- i
x <- x+1
}
}
lob_Nodups <- indNames(lobster_gen)[! indNames(lobster_gen) %in% lob_dups]
lobster_gen <- lobster_gen[lob_Nodups,]
summary(lobster_gen$pop)
basic_lobster <- basic.stats(lobster_gen,diploid=TRUE)
Ho_lobster<-round(apply(basic_lobster$Ho, MARGIN =2, FUN= mean, na.rm=TRUE), digits=3)
He_lobster <- round(apply(basic_lobster$Hs, MARGIN=2, FUN=mean, na.rm=TRUE), digits=3)
par(mar=c(4,4,1,1), las=1, mgp=c(2,0.25,0), tck=-0.005, cex.lab=1.25)
plot(He_lobster, Ho_lobster, xlab="expected H", ylab="observed H", pch=21, bg="gray", xlim=c(0.32,0.405), ylim=c(0.32,0.405))
abline(0,1,lty=3)
abline(lm(Ho_lobster~He_lobster), lty=2, lwd=1.25, col='red')
Fis<- apply(basic_lobster$Fis, MARGIN=2, FUN=mean, na.rm=TRUE)
lobster_gen_sub<- popsub(lobster_gen, sublist=c("Ale", "Ber", "Brd", "Pad", "Sar17", "Vig"))
lobster_fst<- genet.dist(lobster_gen_sub, method="WC84") %>%round(digits=3)
install.packages("poppr")
install.packages("dplyr")
install.packages("hierfstat")
install.packages("reShape2")
yes
lobster <- read.csv("https://jonsmitchell.com/data/lobster_genotypes.csv")
lobster_wide <- reshape(lobster, idvar=c("ID", "Site"), timevar="Locus", direction="wide", sep="")
colnames(lobster_wide) <- gsub("Genotype", "", colnames(lobster_wide))
snpgeno <- lobster_wide[, 3:ncol(lobster_wide)]
snps_to_remove <- c("25580", "32362", "41521", "53889", "65376", "8953", "21197", "15531", "22740", "28357", "33066", "51507", "53052", "53263", "21880", "22323", "22365")
snpgeno <- snpgeno[, !colnames(snpgeno) %in% snps_to_remove]
ind <- as.character(lobster_wide$ID)
site <- as.character(lobster_wide$Site)
lobster_gen <- df2genind(snpgeno, ploidy=2, ind.names=ind, pop=site, sep="")
library(adegenet)
lobster_gen <- df2genind(snpgeno, ploidy=2, ind.names=ind, pop=site, sep="")
lobster_gen <- missingno(lobster_gen, type="geno", cutoff=0.20)
library(adegenet)
library(poppr)
library(dplyr)
library(hierfstat)
library(reshape2)
library(ggplot2)
library(RColorBrewer)
library(scales)
lobster <- read.csv("https://jonsmitchell.com/data/lobster_genotypes.csv")
lobster_wide <- reshape(lobster, idvar=c("ID", "Site"), timevar="Locus", direction="wide", sep="")
colnames(lobster_wide) <- gsub("Genotype", "", colnames(lobster_wide))
snpgeno <- lobster_wide[, 3:ncol(lobster_wide)]
snps_to_remove <- c("25580", "32362", "41521", "53889", "65376", "8953", "21197", "15531", "22740", "28357", "33066", "51507", "53052", "53263", "21880", "22323", "22365")
snpgeno <- snpgeno[, !colnames(snpgeno) %in% snps_to_remove]
ind <- as.character(lobster_wide$ID)
site <- as.character(lobster_wide$Site)
lobster_gen <- df2genind(snpgeno, ploidy=2, ind.names=ind, pop=site, sep="")
lobster_gen <- missingno(lobster_gen, type="geno", cutoff=0.20)
mlg(lobster_gen)
dups_lobster <- mlg.id(lobster_gen)
library(adegenet)
library(poppr)
library(dplyr)
library(hierfstat)
library(reshape2)
library(ggplot2)
library(RColorBrewer)
library(scales)
lobster <- read.csv("https://jonsmitchell.com/data/lobster_genotypes.csv")
lobster_wide <- reshape(lobster, idvar=c("ID", "Site"), timevar="Locus", direction="wide", sep="")
colnames(lobster_wide) <- gsub("Genotype", "", colnames(lobster_wide))
snpgeno <- lobster_wide[, 3:ncol(lobster_wide)]
snps_to_remove <- c("25580", "32362", "41521", "53889", "65376", "8953", "21197", "15531", "22740", "28357", "33066", "51507", "53052", "53263", "21880", "22323", "22365")
snpgeno <- snpgeno[, !colnames(snpgeno) %in% snps_to_remove]
ind <- as.character(lobster_wide$ID)
site <- as.character(lobster_wide$Site)
lobster_gen <- df2genind(snpgeno, ploidy=2, ind.names=ind, pop=site, sep="")
lobster_gen <- missingno(lobster_gen, type="geno", cutoff=0.20)
mlg(lobster_gen)
dups_lobster <- mlg.id(lobster_gen)
lob_dups <- c()
x <- 1
for (i in dups_lobster) {
if (length(dups_lobster[i])>1){
lob_dups[x] <- i
x <- x+1
}
}
lobster_wide <- reshape(lobster, idvar=c("ID", "Site"), timevar="Locus", direction="wide", sep="")
library(adegenet)
library(poppr)
library(dplyr)
library(hierfstat)
library(reshape2)
library(ggplot2)
library(RColorBrewer)
library(scales)
lobster <- read.csv("https://jonsmitchell.com/data/lobster_genotypes.csv")
lobster_wide <- reshape(lobster, idvar=c("ID", "Site"), timevar="Locus", direction="wide", sep="")
colnames(lobster_wide) <- gsub("Genotype", "", colnames(lobster_wide))
snpgeno <- lobster_wide[, 3:ncol(lobster_wide)]
snps_to_remove <- c("25580", "32362", "41521", "53889", "65376", "8953", "21197", "15531", "22740", "28357", "33066", "51507", "53052", "53263", "21880", "22323", "22365")
snpgeno <- snpgeno[, !colnames(snpgeno) %in% snps_to_remove]
ind <- as.character(lobster_wide$ID)
site <- as.character(lobster_wide$Site)
lobster_gen <- df2genind(snpgeno, ploidy=2, ind.names=ind, pop=site, sep="")
lobster_gen <- missingno(lobster_gen, type="geno", cutoff=0.20)
mlg(lobster_gen)
dups_lobster <- mlg.id(lobster_gen)
lob_dups <- c()
x <- 1
for (i in dups_lobster) {
if (length(dups_lobster[i])>1){
lob_dups[x] <- i
x <- x+1
}
}
lob_Nodups <- indNames(lobster_gen)[! indNames(lobster_gen) %in% lob_dups]
lobster_gen <- lobster_gen[lob_Nodups,]
summary(lobster_gen$pop)
basic_lobster <- basic.stats(lobster_gen,diploid=TRUE)
Ho_lobster<-round(apply(basic_lobster$Ho, MARGIN =2, FUN= mean, na.rm=TRUE), digits=3)
He_lobster <- round(apply(basic_lobster$Hs, MARGIN=2, FUN=mean, na.rm=TRUE), digits=3)
par(mar=c(4,4,1,1), las=1, mgp=c(2,0.25,0), tck=-0.005, cex.lab=1.25)
plot(He_lobster, Ho_lobster, xlab="expected H", ylab="observed H", pch=21, bg="gray", xlim=c(0.32,0.405), ylim=c(0.32,0.405))
abline(0,1,lty=3)
abline(lm(Ho_lobster~He_lobster), lty=2, lwd=1.25, col='red')
Fis<- apply(basic_lobster$Fis, MARGIN=2, FUN=mean, na.rm=TRUE)
lobster_gen_sub<- popsub(lobster_gen, sublist=c("Ale", "Ber", "Brd", "Pad", "Sar17", "Vig"))
lobster_fst<- genet.dist(lobster_gen_sub, method="WC84") %>%round(digits=3)
lab_order<- c("Ber", "Brd", "Pad", "Vig", "Sar17", "Ale")
fst.mat<- as.matrix(lobster_fst)
fst.mat1<-fst.mat[lab_order,]
fst.mat2 <- fst.mat1[,lab_order]
ind<-which(upper.tri(fst.mat2), arr.ind=TRUE)
fst.df<-data.frame(Site1=dimnames(fst.mat2)[[2]][ind[,2]],Site2=dimnames(fst.mat2)[[1]][ind[,1]], Fst=fst.mat2[ ind ])
fst.df$Site1 <- factor(fst.df$Site1,levels=unique(fst.df$Site1))
fst.df$Site2<- factor(fst.df$Site2,levels=unique(fst.df$Site2))
fst.df$Fst[fst.df$Fst<0] <- 0
fst.label <- expression(italic("F") [ST])
mid <- max(fst.df$Fst)/2
ggplot(data=fst.df,aes(x=Site1, y=Site2, fill=Fst))+geom_tile(colour="black")+geom_text(aes(label=Fst), color="black", size=3)+scale_fill_gradient2(low="blue", mid="pink", high="red", midpoint=mid, name=fst.label,limits=c(0,max(fst.df$Fst)), breaks=c(0,0.05,0.10,0.15))+scale_x_discrete(expand=c(0,0))+scale_y_discrete(expand=c(0,0), position="right")+theme(axis.text=element_text(colour="black", size=10, face="bold"), axis.title=element_blank(), panel.grid=element_blank(), panel.background=element_blank(), legend.position="right", legend.title=element_text(size=14, face="bold"), legend.text=element_text(size=10))
coalescent.plot()
install.packages("coala")
library(coala)
model<- coal_model(sample_size=3, loci_number=1)
model<- model+feat_mutation(rate-1,model="IFS")
model<-coal_model(sample_size=c(5,2,0), loci_number=1)+feat_migration(rate=0.5, symmetric=TRUE)+feat_pop_merge(0.5,3,2)+feat_pop_merge(0.8,2,1)
model<- coal_model(3,1)+feat_mutation(rate=1)+sumstat_seg_sites()
sumstats<-simulate(model,seed=123)
names(sumstats)
sumstats$seg_sites[[1]]
model<- model+locus_single(500)
sumstats<-simulate(model)
sumstats$seg_sites[[1]]
sumstats$seg_sites[[2]]
model<- model+locus_averaged(2,750)
summstats<-simulate(model)
length(sumstats$seg_sites)
model<-coal_model(5,1)+feat_mutation(rate=par_named("theta"))+sumstat_seg_sites()
sumstats1<- simulate(model,pars=c(theta=2.5))
sumstats2<-simulate(model,pars=c(theta=4.3))
model<-coal_model(5,1)+feat_mutation(rate=par_prior("theta", runif(1,0,10)))+sumstat_seg_sites()
sumstats<-simulate(model)
sumstats$pars
sumstats2<-simulate(model)
sumstats2$pars
model<-coal_model(5,1)+feat_mutation(rate=par_range("theta",0,1,5))+sumstat_seg_sites()
model<-coal_model(5,1)+feat_mutation(rate=par_range("theta",0.1,5))+sumstat_seg_sites()
model<-coal_model(4,2)+feat_mutation(rate=per_named("theta"))+feat_recombination(rate=par_expr(theta*2))
model<-coal_model(4,2)+feat_mutation(rate=par_named("theta"))+feat_recombination(rate=par_expr(theta*2))
pdf('005_extracredit.pdf')
plot(sumstats1,sumstats2,xlab="sumstats1",ylab="sumstas2")
dev.off()
getwd()
setwd("~/Desktop/Evolution/Tasks/NP")
data<-read.csv("~/Desktop/Evolution/Tasks/NP/BirdData2.csv")
plot(data$elev, data$weight, xlim=c(15, 950), xlab="Elevation", ylab="Weight in grams")
data1992<-read.csv("~/Desktop/Evolution/Tasks/NP/1992BirdData.csv")
data1993<-read.csv("~/Desktop/Evolution/Tasks/NP/1993BirdData.csv")
data1994<-read.csv("~/Desktop/Evolution/Tasks/NP/1994BirdData.csv")
data1995<-read.csv("~/Desktop/Evolution/Tasks/NP/1995BirdData.csv")
data1996<-read.csv("~/Desktop/Evolution/Tasks/NP/1996BirdData.csv")
data1997<-read.csv("~/Desktop/Evolution/Tasks/NP/1997BirdData.csv")
data1998<-read.csv("~/Desktop/Evolution/Tasks/NP/1998BirdData.csv")
data1999<-read.csv("~/Desktop/Evolution/Tasks/NP/1999BirdData.csv")
data2000<-read.csv("~/Desktop/Evolution/Tasks/NP/2000BirdData.csv")
data2001<-read.csv("~/Desktop/Evolution/Tasks/NP/2001BirdData.csv")
data2002<-read.csv("~/Desktop/Evolution/Tasks/NP/2002BirdData.csv")
data2006<-read.csv("~/Desktop/Evolution/Tasks/NP/2006BirdData.csv")
data2007<-read.csv("~/Desktop/Evolution/Tasks/NP/2007BirdData.csv")
plot(data1992$elev, data1992$weight, xlab="Elevation", ylab="Weight in grams")
title('1992 Elevation vs. Weight')
plot(data1993$elev, data1993$weight, xlab="Elevation", ylab="Weight in grams")
title('1993 Elevation vs. Weight')
plot(data1994$elev, data1994$weight, xlab="Elevation", ylab="Weight in grams")
title('1994 Elevation vs. Weight')
plot(data1995$elev, data1995$weight, xlab="Elevation", ylab="Weight in grams")
title('1995 Elevation vs. Weight')
plot(data1996$elev, data1996$weight, xlab="Elevation", ylab="Weight in grams")
title('1996 Elevation vs. Weight')
plot(data1997$elev, data1997$weight, xlab="Elevation", ylab="Weight in grams")
title('1997 Elevation vs. Weight')
plot(data1998$elev, data1998$weight, xlab="Elevation", ylab="Weight in grams")
title('1998 Elevation vs. Weight')
plot(data1999$elev, data1999$weight, xlab="Elevation", ylab="Weight in grams")
title('1999 Elevation vs. Weight')
plot(data2000$elev, data2000$weight, xlab="Elevation", ylab="Weight in grams")
title('2000 Elevation vs. Weight')
plot(data2001$elev, data2001$weight, xlab="Elevation", ylab="Weight in grams")
title('2001 Elevation vs. Weight')
plot(data2002$elev, data2002$weight, xlab="Elevation", ylab="Weight in grams")
title('2002 Elevation vs. Weight')
plot(data2006$elev, data2006$weight, xlab="Elevation", ylab="Weight in grams")
title('2006 Elevation vs. Weight')
plot(data2007$elev, data2007$weight, xlab="Elevation", ylab="Weight in grams")
title('2007 Elevation vs. Weight')
plot(data$year, data$elev, xlab="Year",ylab="Elevation")
title('Changes in Elevation from 1992-2007')
plot(data$year, data$weight, xlab="Year", ylab="Weight")
title('Changes in Weight from 1992-2007')
cor.test(data$elev, data$weight, method=c("pearson", "kendall", "spearman"))
cor.test(data$year, data$elev, method=c("pearson", "kendall", "spearman"))
cor.test(data$year, data$weight, method=c("pearson", "kendall", "spearman"))
setwd("~/Desktop/Evolution/Tasks/Task_07")
text.string<- "((((((((cow,pig), whale), bat,(lemur,human))),(robin,iguana)), coelacanth), (gold_fish, trout)), shark);"
library(ape)
vert.tree<-read.tree(text=text.string)
plot(vert.tree, edge.width=2)
nodelabels(frame="circle", bg='white', cex=1)
vert.tree
str(vert.tree)
tree<-read.tree(text="(((A,B),(C,D)),E);")
plotTree(tree,offset=1)
library(phytools)
plotTree(tree,offset=1)
tiplabels(frame="circle", bg='lightblue', cex=1)
nodelabels(frame="circle", bg='white', cex=1)
tree$tip.label
tree$edge
AnolisTree<- force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length, col='black', border='white', main="", xlab="edge lengths for the Anolis tree", ylim=c(0,50), xlim=c(0,6))
tipEdges<-which(AnolisTree$edge[,2] <=Ntip(AnolisTree))
Lengths<- AnolisTree$edge.length
names(Lengths)<-AnolisTree$tip.label
names(Lengths)[which(Lengths==min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs <-sapply(AnolisTree$edge.length, round, digits=2)
pdf("007_plot01.pdf")
edgelabels(text=Labs, cex=0.25)
ltt(AnolisTree)
abline(0,1,lwd=2,col='red',lty=2)
plot(tree,type="fan")
dev.off()
data<-read.csv("https://jonsmitchell.com/data/svl.csv", stringsAsFactors=F, row.names=1)
svl<-setNames(data$svl, rownames(data))
Ancestors<-fastAnc(AnolisTree,svl,vars=TRUE, CI=TRUE)
par(mar=c(0.1,0.1,0.1,0.1))
plot(tree,type="fan", lwd=2,show.tip.label=F)
tiplabels(pch=16,cex=0.25*svl[tree$tip.label])
nodelabels(pch=16,cex=0.25*Ancestors$ace)
obj<-contMap(AnolisTree,svl,plot=F)
plot(obj, type="fan", legend=0.7*max(nodeHeights(AnolisTree)), sig=2, fsize=c(0.7, 0.9))
fossilData<- data.frame(svl=log(c(25.4,23.2,17.7,19.7,24,31)), tip1=c("Anolis_aliniger", "Anolis_aliniger", "Anolis_occultus", "Anolis_ricordii", "Anolis_cristatellus", "Anolis_occultus"), tip2=c("Anolis_chlorocyanus", "Anolis_coelestinus", "Anolis_hendersoni", "Anolis_cybotes", "Anolis_angusticeps", "Anolis_angusticeps"))
fossilNodes<-c()
nodeN<-c()
Node<-fastMRCA(tree, fossilData[i, "tip1"], fossilData[i, "tip2"])
nodeN<-c()
for(i in 1:nrow(FossilData)){
Node<-fastMRCA(tree, fossilData[i, "tip1"], fossilData[i, "tip2"])
fossilNodes[i] <- fossilData[i, "svl"]
nodeN[i] <- Node
names(fossilNodes) <- nodeN
}
for(i in 1:nrow(fossilData)){
Node<-fastMRCA(tree, fossilData[i, "tip1"], fossilData[i, "tip2"])
fossilNodes[i] <- fossilData[i, "svl"]
nodeN[i] <- Node
names(fossilNodes) <- nodeN
}
pdf("007_plot01.pdf")
edgelabels(text=Labs, cex=0.25)
ltt(AnolisTree)
abline(0,1,lwd=2,col='red',lty=2)
fit.bd(AnolisTree, b,d,rho=0.2)
plot(tree,type="fan")
dev.off()
data<-read.csv("https://jonsmitchell.com/data/svl.csv", stringsAsFactors=F, row.names=1)
svl<-setNames(data$svl, rownames(data))
Ancestors<-fastAnc(AnolisTree,svl,vars=TRUE, CI=TRUE)
par(mar=c(0.1,0.1,0.1,0.1))
plot(tree,type="fan", lwd=2,show.tip.label=F)
tiplabels(pch=16,cex=0.25*svl[tree$tip.label])
nodelabels(pch=16,cex=0.25*Ancestors$ace)
obj<-contMap(AnolisTree,svl,plot=F)
plot(obj, type="fan", legend=0.7*max(nodeHeights(AnolisTree)), sig=2, fsize=c(0.7, 0.9))
fossilData<- data.frame(svl=log(c(25.4,23.2,17.7,19.7,24,31)), tip1=c("Anolis_aliniger", "Anolis_aliniger", "Anolis_occultus", "Anolis_ricordii", "Anolis_cristatellus", "Anolis_occultus"), tip2=c("Anolis_chlorocyanus", "Anolis_coelestinus", "Anolis_hendersoni", "Anolis_cybotes", "Anolis_angusticeps", "Anolis_angusticeps"))
fossilNodes<-c()
nodeN<-c()
for(i in 1:nrow(fossilData)){
Node<-fastMRCA(tree, fossilData[i, "tip1"], fossilData[i, "tip2"])
fossilNodes[i] <- fossilData[i, "svl"]
nodeN[i] <- Node
names(fossilNodes) <- nodeN
}
for(i in 1:nrow(fossilData)){
Node<-fastMRCA(AnolisTree, fossilData[i, "tip1"], fossilData[i, "tip2"])
fossilNodes[i] <- fossilData[i, "svl"]
nodeN[i] <- Node
names(fossilNodes) <- nodeN
}
Ancestors_withFossils <- fastAnc(tree,svl,anc.states=fossilNodes, CI=TRUE, var=TRUE)
Ancestors_withFossils <- fastAnc(AnolisTree,svl,anc.states=fossilNodes, CI=TRUE, var=TRUE)
setwd("~/Desktop/Evolution/Tasks/NP/code")
data<-read.csv("~/Desktop/Evolution/Tasks/NP/BirdData2.csv")
plot(data$elev, data$weight, xlim=c(15, 950), xlab="Elevation", ylab="Weight in grams")
data<-read.csv("~/Desktop/Evolution/Tasks/NP/BirdData2.csv")
data<-read.csv("~/Desktop/Evolution/Tasks/NP/Data/BirdData2.csv")
plot(data$elev, data$weight, xlim=c(15, 950), xlab="Elevation", ylab="Weight in grams")
data1992<-read.csv("~/Desktop/Evolution/Tasks/NP/Data/1992BirdData.csv")
data1993<-read.csv("~/Desktop/Evolution/Tasks/NP/Data/1993BirdData.csv")
data1994<-read.csv("~/Desktop/Evolution/Tasks/NP/Data/1994BirdData.csv")
data1995<-read.csv("~/Desktop/Evolution/Tasks/NP/Data/1995BirdData.csv")
data1996<-read.csv("~/Desktop/Evolution/Tasks/NP/Data/1996BirdData.csv")
data1997<-read.csv("~/Desktop/Evolution/Tasks/NP/Data/1997BirdData.csv")
data1998<-read.csv("~/Desktop/Evolution/Tasks/NP/Data/1998BirdData.csv")
data1999<-read.csv("~/Desktop/Evolution/Tasks/NP/Data/1999BirdData.csv")
data2000<-read.csv("~/Desktop/Evolution/Tasks/NP/Data/2000BirdData.csv")
data2001<-read.csv("~/Desktop/Evolution/Tasks/NP/Data/2001BirdData.csv")
data2002<-read.csv("~/Desktop/Evolution/Tasks/NP/Data/2002BirdData.csv")
data2006<-read.csv("~/Desktop/Evolution/Tasks/NP/Data/2006BirdData.csv")
data2007<-read.csv("~/Desktop/Evolution/Tasks/NP/Data/2007BirdData.csv")
pdf("1992 Elevation vs Weight.pdf")
plot(data1992$elev, data1992$weight, xlab="Elevation", ylab="Weight in grams")
title('1992 Elevation vs. Weight')
dev.off()
pdf("1993 Elevation vs Weight.pdf")
plot(data1993$elev, data1993$weight, xlab="Elevation", ylab="Weight in grams")
title('1993 Elevation vs. Weight')
dev.off()
pdf("1994 Elevation vs Weight.pdf")
plot(data1994$elev, data1994$weight, xlab="Elevation", ylab="Weight in grams")
title('1994 Elevation vs. Weight')
dev.off()
getwd()
setwd("~/Desktop/Evolution/Tasks/Task_08")
setwd("~/Desktop/Evolution/Tasks/Task_08")
library(phytools)
trees<-list()
births<-vector()
Fractions<- vector()
random<- c()
random2<-c()
treelist<-c()
for(i in 1:100) {
births[i]<- runif(1)
Fractions[i]<- runif(1)
trees[[i]]<- pbtree(b=births[i], d=(Fractions[i]*births[i]), n=100)
random[[i]]<- births[i]
random2[[i]]<- (Fractions[i])
treelist[[i]]<- mean(trees[[i]]$edge.length)
}
pdf("Trees.pdf")
plot(trees[[i]])
dev.off()
trees[[100]]$tip.label
sapply(trees,Ntip)
tips<- log(sapply(trees,Ntip))
random3<-unlist(random)
head(tips)
pdf("logtip&diversificationQ4.pdf")
plot(tips,xlab="log of tips", ylab="net diversification", pch=16)
dev.off()
cor(tips,random3)
# The test shows there's not much of correlation between the logs of the total number of tips and the net diversification
random4<- unlist(random2)
treelist2<- unlist(treelist)
plot(treelist2, random3, xlab="avg. branch length", ylab="Speciation Rate", pch=4)
pdf("Avg.branchlength&SpeciationRate.pdf")
plot(treelist2, random3, xlab="avg. branch length", ylab="Speciation Rate", pch=1)
dev.off()
cor(treelist2,random4)
pdf("Avg.branchlength&SpeciationRateQ5,6.pdf")
plot(treelist2, random3, xlab="avg. branch length", ylab="Speciation Rate", pch=1)
dev.off()
cor(treelist2,random4)
#The correlation test shows a negative value telling us the two do not have a relationship
Tree<- trees[[which.max(tips)]]
View(Tree)
pdf("TreeQ7.pdf")
plot(Tree)
dev.off()
rates<- vector()
traits<-c()
meantraits<-c()
vartraits<-c()
for(i in 100) {
rates[i]<-runif(1)
traits[[i]]<-fastBM(tree=Tree, sig2=rates[i])
meantraits[[i]]<-mean(traits[[i]])
vartraits[[i]]<-var(traits[[i]])
}
meantraits<-unlist(meantraits)
pdf("meanoftraits&rateQ8.pdf")
plot(meantraits, rates)
dev.off()
meantraits<-unlist(meantraits)
pdf("meanoftraits&rateQ8.pdf")
plot(meantraits, rates)
for(i in 1:100) {
rates[i]<-runif(1)
traits[[i]]<-fastBM(tree=Tree, sig2=rates[i])
meantraits[[i]]<-mean(traits[[i]])
vartraits[[i]]<-var(traits[[i]])
}
meantraits<-unlist(meantraits)
pdf("meanoftraits&rateQ8.pdf")
plot(meantraits, rates)
dev.off()
cor(meantraits,rates)
#The small number given from the correlation test shows there's little relationship between the mean of traits and the rates
vartraits<-unlist(vartraits)
pdf("varianceoftraits&ratesQ9.pdf")
plot(vartraits,rates)
dev.off()
cor(vartraits,rates)
#The higher correlation number here shows that there's more of a relationship between the variance of traits and rates, than that of mean of traits and rates
pdf("08_plot.pdf")
plot(traits[[1]],traits[[2]])
dev.off()
cor(traits[[1]], traits[[2]])
traitMat<- cbind(traits[[1]], traits[[4]])
#Extra Credit
pdf("08_EC.pdf")
phylomorphospace(Tree, traitMat, xlab="Trait 1", ylab="Trait 2")
dev.off()
#Extra Credit
pdf("08_EC.pdf")
phylomorphospace(Tree, traitMat, xlab="Trait 1", ylab="Trait 2")
dev.off()
#Extra Credit
pdf("08_EC.pdf")
phylomorphospace(Tree, traitMat, xlab="Trait 1", ylab="Trait 2")
dev.off()
setwd("~/Desktop/Evolution/Tasks/Task_08")
R.version()
