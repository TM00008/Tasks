setwd("~/Desktop/Evolution/Tasks/Task_09")
install.packages("diversitree")
library(diversitree)
transition_0to1<-0.1
transition_1to0<-0.1
speciation_0<-0.2
extinction_0<-0.1
speciation_1<-0.2
extinction_1<-0.1
maxN<-1e3
maxT<-50
Pars<-c(speciation_0,speciation_1,extinction_0,extinction_1,transition_0to1,transition_1to0)
simTree<-tree.bisse(Pars,max.taxa=maxN,max.t=maxT)
str(simTree)
stateTable<-table(simTree$tip.state)
stateTable/sum(stateTable)
set.seed(2)
phy<-tree.bd(c(1,0.3),max.taxa=100)
lik<-make.bd(phy)
argnames(lik)
phy2<-tree.bd(c(0,0.3), max.taxa=100)
lik(c(1,0.03)) # -7.74086
lik(c(1,.03), condition.surv=FALSE) # -10.74823
plot(phy,no.margin=TRUE,show.tip.label=FALSE)
fit<-find.mle(lik,c(.1,.03), method="subplex")
coef(fit)
logLik(fit)
fit$lnLik
purebirth<-constrain(lik,mu~0)
fit.purebirth<-find.mle(purebirth,coef(fit)[1],method="subplex")
anova(fit,purebirth=fit.purebirth)
set.seed(1)
samples<-mcmc(lik,fit$par,nsteps=10000,w=.1, print.every=0)
set.seed(1)
phy.sub<-drop.tip(phy,sample(100,25))
lik.sub<-make.bd(phy.sub,sampling.f=75/100)
fit.sub<-find.mle(lik.sub, c(0.1,0.03), method="subplex")
coef(fit.sub)
lik.sub.purebirth<-constrain(lik.sub, mu~0)
fit.sub.purebirth<-find.mle(lik.sub.purebirth,coef(fit.sub)[1], method="subplex")
anova(fit.sub.purebirth=fit.sub.purebirth)
anova(fit.sub,purebirth=fit.sub.purebirth)
samples$r<-samples$lambda-samples$mu)
samples$r<-samples$lambda-samples$mu
col<-c("#eaab00", "#004165","#618e02")
profiles.plot(samples[c("lambda", "mu", "r")], col.line=col, las=1, xlab="Parameter estimate", ylab="Probability density", alpha=.75, legend.pos="topright")
abline(v=c(.1,.03,.07), col=col, lty=2)
# This graph displays the distribution of birth-death rate, which includes mu(extinction rate), lambda (speciation rate), and r(diversification rate).
pars<- c(0.1,0.2,0.03,0.03,0.01,0.01)
set.seed(4)
phy<- tree.bisse(pars,max.t=30, x0=0)
states<- phy$tip.state
head(states)
lik<-make.bisse(phy,states)
lik(pars) #-159.71
p<- starting.point.bisse(phy)
p
fit<-find.mle(lik,p)
fit$lnLik
round(coef(fit),3)
par(mar=rep(0,4))
col<-c("#004165", "eaab00")
plot(history.from.sim.discrete(phy,0:1), phy, col=col)
col<-c("#004165", "#eaab00")
plot(history.from.sim.discrete(phy,0:1), phy, col=col)
pdf("09_plot1.pdf")
col<-c("#eaab00", "#004165","#618e02")
profiles.plot(samples[c("lambda", "mu", "r")], col.line=col, las=1, xlab="Parameter estimate", ylab="Probability density", alpha=.75, legend.pos="topright")
abline(v=c(.1,.03,.07), col=col, lty=2)
dev.off()
pdf("09_plot2.pdf")
col<-c("#004165", "#eaab00")
plot(history.from.sim.discrete(phy,0:1), phy, col=col)
dev.off()
setwd("~/Desktop/Evolution/Tasks/Task_09")
# Yellow is state 1 and Blue is state 0. This combines the birth-death rates of two states. Yellow speciates at twice the rate of Blue.
library(ape)
tree<- rtree(n=5,rooted=TRUE,TRUE,tip.label=NULL)
plot(tree)
Tree<-rtree(n=30,rooted=TRUE,TRUE,tip.label=NULL)
plot(Tree)
str(simTree)
library(phytools)
set.seed(3)
tree2<-pbtree(b=1,d=3,n=50)
plotTree(tree2)
plot(tree2)
plotTree(tree2)
library(diversitree)
set.seed(10)
phy<-tree.bisse(pars, max.t=30, x0=0)
plot(phy)
pars<-c(1,0.3,0.4,1,0.01,0.2)
pars<-c(1,0.3,0.4,1,0.01,0.2)
set.seed(5)
phy2<-trees(pars,"bisse", max.taxa=70, max.t=Inf, x0=0)[[1]]
plot(phy2)
set.seed(3)
phy3<-tree.musse(Pars, 30, x0=1)
x<- rnorm(100,mean=0,sd=4)
var(x)
mean(x)
y<-((x*5)+2)+runif(100,0,0.1)
pdf('plot1.pdf')
plot(x,y)
abline(lm(y~x),col='red')
dev.off()
setwd("~/Desktop/Evolution/Tasks/Task_10")
x<- rnorm(100,mean=0,sd=4)
var(x)
mean(x)
y<-((x*5)+2)+runif(100,0,0.1)
pdf('plot1.pdf')
plot(x,y)
abline(lm(y~x),col='red')
dev.off()
coef(lm(y~x))
#The y-intercept is 2.0449, while the x-intercept is 4.999
z<-c()
x<-rnorm(100,mean=5,sd=4)
for(i in 1:100) {
z[i]<-runif(1)
y<-(x*z[i])+2+(rnorm(100,0:0.1))
l<-coef(lm(z[1:100]~y))
}
plot(z[1:100],y)
abline(lm(y~z[1:100]))
coef(lm(y~z))
pdf('plot10.pdf')
plot(c(z,0.4610))
def.off()
pdf('plot10.pdf')
plot(c(z,0.4610))
dev.off()
install.packages('ggplot2')
install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
install.packages("ggplot")
library(ggplot)
times<-10000
doors<-c('car', 'money', 'cruise')
monty_hall<-function(iteration) {
contestant_door<-sample(doors,size=interation, replace=TRUE)
i=1:iteration
stick_win<-ifelse(contestant_door=='car', 1,0)
switch_win<-ifelse(contestant_door=='car', 0,1)
stick_prob<-cumsum(stick_win)/i
switch_prob<-cumsum(switch_win)/i
results<- data.frame(i=i, contestant_door=contestant_door, stick_win=stick_win, switch_win=switch_win, stick_prob=stick_prob, switch_prob=switch_prob)
return(results)
}
results<-monty_hall(times)
monty_hall<-function(iteration) {
contestant_door<-sample(doors,size=iteration, replace=TRUE)
i=1:iteration
stick_win<-ifelse(contestant_door=='car', 1,0)
switch_win<-ifelse(contestant_door=='car', 0,1)
stick_prob<-cumsum(stick_win)/i
switch_prob<-cumsum(switch_win)/i
results<- data.frame(i=i, contestant_door=contestant_door, stick_win=stick_win, switch_win=switch_win, stick_prob=stick_prob, switch_prob=switch_prob)
return(results)
}
results<-monty_hall(times)
summary<-table(results$contestant_door)
df_summary<-data.frame(label=names(summary), count=matrix(summary))
print(df_summary)
pdf('plot10_ec01.pdf')
barplot(c(sum(as.numeric(results$stick_win)),sum(as.numeric(results$switch_win))),beside=TRUE,xlab='switch', ylab='stick')
dev.off()
install.packages('meme')
install.packages('memer')
install.packages('memory')
install.packages('memery')
library(meme)
library(memer)
library(memery)
meme("kitten.jpg","When you stay up all night and you look at the first question")
u<-"https://www.google.com/imgres?imgurl=https%3A%2F%2Fhips.hearstapps.com%2Fhmg-prod%2Fimages%2Fcute-cat-photos-1593441022.jpg%3Fcrop%3D1.00xw%3A0.753xh%3B0%2C0.153xh%26resize%3D1200%3A*&tbnid=0hGYxUJe0xLamM&vet=12ahUKEwjr-P-Kxsj-AhUGJGIAHeWVDq0QMygCegUIARDqAQ..i&imgrefurl=https%3A%2F%2Fwww.womansday.com%2Flife%2Fg32979681%2Fcute-cat-photos%2F&docid=Zx4TpH0a6gviqM&w=1200&h=603&q=cat%20pictures&client=safari&ved=2ahUKEwjr-P-Kxsj-AhUGJGIAHeWVDq0QMygCegUIARDqAQ"
meme(u,"code","When you get a D in evolution")
pic<-system.file("philosoraptor.jpg", package='memery')
txt<-c("when you've been staring", "at the same code for 10 hours")
meme(pic,txt[1], "dino1.jpg")
install.packages('rlang')
install.packages("rlang")
pic<-system.file("philosoraptor.jpg", package='memery')
txt<-c("when you've been staring", "at the same code for 10 hours")
meme(pic,txt[1], "dino1.jpg")
